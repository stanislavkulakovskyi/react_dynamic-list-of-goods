{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","React","memo","goods","map","good","style","color","name","id","getAll","fetch","then","response","json","getFirst5","sort","goodA","goodB","localeCompare","slice","getRedGoods","filter","App","useState","visibleGoods","setVisibleGoods","hasLoadingError","setHasLoadingError","isLoading","setIsLoading","fetchData","getData","a","data","Error","className","type","onClick","active","ReactDOM","render","document","getElementById"],"mappings":"8QAOaA,EAA6BC,IAAMC,MAAK,gBAAGC,EAAH,EAAGA,MAAH,OACnD,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAM,GAAD,OAAKF,EAAKE,QAH1B,SAKGF,EAAKG,MAJDH,EAAKI,YCNX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAG1B,IAAMC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAACT,GAAD,OAAWA,EACda,MAAK,SAACC,EAAaC,GAClB,OAAOD,EAAMT,KAAKW,cAAcD,EAAMV,SAEvCY,MAAM,EAAG,OAGHC,EAAc,WACzB,OAAOX,IACJE,MAAK,SAACT,GAAD,OAAWA,EAAMmB,QACrB,SAACjB,GAAD,MAAyB,QAAfA,EAAKE,aCdRgB,EAAgB,WAC3B,MAAwCC,mBAAiB,IAAzD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8CF,oBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEMC,EAAS,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DAChBH,GAAa,GACbJ,EAAgB,IAFA,kBAKKM,IALL,OAKRE,EALQ,OAOdR,EAAgBQ,GAPF,sDASdN,GAAmB,GACb,IAAIO,MAAM,qBAVF,yBAYdL,GAAa,GAZC,4EAAH,sDAgBf,OACE,sBAAKM,UAAU,MAAf,UACE,uDAEA,sBAAKA,UAAU,eAAf,UACE,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAO,sBAAE,sBAAAL,EAAA,sEACDF,EAAUrB,GADT,2CAGT0B,UAAU,8BANZ,4BAUA,wBACEC,KAAK,SACL,UAAQ,oBACRC,QAAO,sBAAE,sBAAAL,EAAA,sEACDF,EAAUhB,GADT,2CAGTqB,UAAU,+BANZ,gCAUA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAO,sBAAE,sBAAAL,EAAA,sEACDF,EAAUV,GADT,2CAGTe,UAAU,8BANZ,+BAYDP,GACC,cAAC,IAAD,CAAQQ,KAAK,aAAaE,QAAM,IAGjCZ,EAEG,mDAGA,cAAC3B,EAAD,CACEG,MAAOsB,QCzEnBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6af55750.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: `${good.color}` }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n));\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then((response) => response.json());\n}\n\nexport const getFirst5 = () => {\n  return getAll()\n    .then((goods) => goods\n      .sort((goodA: Good, goodB: Good) => {\n        return goodA.name.localeCompare(goodB.name);\n      })\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then((goods) => goods.filter(\n      (good) => good.color === 'red',\n    ));\n};\n","import React, { useState } from 'react';\nimport Loader from 'react-loaders';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, getFirst5, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [visibleGoods, setVisibleGoods] = useState<Good[]>([]);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchData = async (getData: { (): Promise<Good[]>; }) => {\n    setIsLoading(true);\n    setVisibleGoods([]);\n\n    try {\n      const data = await getData();\n\n      setVisibleGoods(data);\n    } catch (error) {\n      setHasLoadingError(true);\n      throw new Error('No data was found');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <div className=\"App__buttons\">\n        <button\n          type=\"button\"\n          data-cy=\"all-button\"\n          onClick={async () => {\n            await fetchData(getAll);\n          }}\n          className=\"App__button App__button-all\"\n        >\n          Load all goods\n        </button>\n        <button\n          type=\"button\"\n          data-cy=\"first-five-button\"\n          onClick={async () => {\n            await fetchData(getFirst5);\n          }}\n          className=\"App__button App__button-five\"\n        >\n          Load 5 first goods\n        </button>\n        <button\n          type=\"button\"\n          data-cy=\"red-button\"\n          onClick={async () => {\n            await fetchData(getRedGoods);\n          }}\n          className=\"App__button App__button-red\"\n        >\n          Load red goods\n        </button>\n      </div>\n\n      {isLoading && (\n        <Loader type=\"ball-pulse\" active />\n      )}\n\n      {hasLoadingError\n        ? (\n          <h3>No data was found</h3>\n        )\n        : (\n          <GoodsList\n            goods={visibleGoods}\n          />\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
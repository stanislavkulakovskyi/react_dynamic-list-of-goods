{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","getAll","fetch","then","response","json","getFirst5","sort","goodA","goodB","localeCompare","slice","getRedGoods","filter","App","useState","visibleGoods","setVisibleGoods","isLoading","setIsLoading","errorMessage","setErrorMessage","fetchData","useCallback","getData","a","fetchedData","isEqual","className","type","onClick","active","ReactDOM","render","document","getElementById"],"mappings":"4QAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAM,GAAD,OAAKF,EAAKE,QAH1B,SAKGF,EAAKG,MAJDH,EAAKI,UCNLC,EAAS,WACpB,OAAOC,MAHI,yEAIRC,MAAK,SAACC,GAAD,OAAcA,EAASC,WAGpBC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAACT,GAAD,OAAWA,EACda,MAAK,SAACC,EAAaC,GAAd,OACJD,EAAMT,KAAKW,cAAcD,EAAMV,SAEhCY,MAAM,EAAG,OAGHC,EAAc,WACzB,OAAOX,IACJE,MAAK,SAACT,GAAD,OAAWA,EAAMmB,QACrB,SAACjB,GAAD,MAAyB,QAAfA,EAAKE,aCbRgB,EAAgB,WAC3B,MAAwCC,mBAAiB,IAAzD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KAEMC,EAAYC,sBAAW,uCAAC,WAAOC,GAAP,eAAAC,EAAA,6DAC5BN,GAAa,GADe,kBAIAK,IAJA,OAIpBE,EAJoB,OAMrBC,kBAAQX,EAAcU,IACzBT,EAAgBS,GAPQ,gDAU1BL,EAAgB,iDAVU,yBAY1BF,GAAa,GAZa,4EAAD,sDAc1B,CAACH,IAEJ,OACE,sBAAKY,UAAU,MAAf,UACE,uDAEA,sBAAKA,UAAU,eAAf,UACE,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMR,EAAUrB,IACzB2B,UAAU,8BAJZ,4BAQA,wBACEC,KAAK,SACL,UAAQ,oBACRC,QAAO,sBAAE,sBAAAL,EAAA,sEACDH,EAAUhB,GADT,2CAGTsB,UAAU,+BANZ,gCAUA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAO,sBAAE,sBAAAL,EAAA,sEACDH,EAAUV,GADT,2CAGTgB,UAAU,8BANZ,+BAYDV,GACC,cAAC,IAAD,CAAQW,KAAK,aAAaE,QAAM,IAGjCX,EAEG,6BAAKA,IAGL,cAAC,EAAD,CACE1B,MAAOsB,QCxEnBgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.eb85bc25.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: `${good.color}` }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport const getAll = (): Promise<Good[]> => {\n  return fetch(API_URL)\n    .then((response) => response.json());\n};\n\nexport const getFirst5 = () => {\n  return getAll()\n    .then((goods) => goods\n      .sort((goodA: Good, goodB: Good) => (\n        goodA.name.localeCompare(goodB.name)\n      ))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then((goods) => goods.filter(\n      (good) => good.color === 'red',\n    ));\n};\n","import React, { useCallback, useState } from 'react';\nimport Loader from 'react-loaders';\nimport './App.scss';\nimport { isEqual } from 'lodash';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, getFirst5, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [visibleGoods, setVisibleGoods] = useState<Good[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const fetchData = useCallback(async (getData: () => Promise<Good[]>) => {\n    setIsLoading(true);\n\n    try {\n      const fetchedData = await getData();\n\n      if (!isEqual(visibleGoods, fetchedData)) {\n        setVisibleGoods(fetchedData);\n      }\n    } catch (error) {\n      setErrorMessage('Failed to fetch data. Please try again later.');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [visibleGoods]);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <div className=\"App__buttons\">\n        <button\n          type=\"button\"\n          data-cy=\"all-button\"\n          onClick={() => fetchData(getAll)}\n          className=\"App__button App__button-all\"\n        >\n          Load all goods\n        </button>\n        <button\n          type=\"button\"\n          data-cy=\"first-five-button\"\n          onClick={async () => {\n            await fetchData(getFirst5);\n          }}\n          className=\"App__button App__button-five\"\n        >\n          Load 5 first goods\n        </button>\n        <button\n          type=\"button\"\n          data-cy=\"red-button\"\n          onClick={async () => {\n            await fetchData(getRedGoods);\n          }}\n          className=\"App__button App__button-red\"\n        >\n          Load red goods\n        </button>\n      </div>\n\n      {isLoading && (\n        <Loader type=\"ball-pulse\" active />\n      )}\n\n      {errorMessage\n        ? (\n          <h3>{errorMessage}</h3>\n        )\n        : (\n          <GoodsList\n            goods={visibleGoods}\n          />\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}